<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">

    <!-- Spring希望管理所有的业务逻辑组件,等... -->
    <context:component-scan
        base-package="com.gs.student">
        <context:exclude-filter type="annotation"
            expression="org.springframework.stereotype.Controller" />
    </context:component-scan>

    <!-- Spring用来控制业务逻辑.数据源、事务控制、AOP -->
    <!-- 引入外部数据库配置文件properties -->
    <context:property-placeholder
        location="classpath:jdbc.properties" />

    <!-- 数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>

    <!-- spring事务管理 -->
    <bean id="dataSourceTransactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 开启基于注解的事务 -->
    <tx:annotation-driven
        transaction-manager="dataSourceTransactionManager" />

    <!-- 整合mybatis 目的: -->
    <!-- 1.Spring管理所有组件.mapper的实现类 service===>Dao @Autowired:自动注入mapper -->
    <!-- 2.spring用来管理事务,spring声明式事务 -->
    <!-- 创建出SqlSessionFactory对象 -->
    <bean class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- mapperLocations:指定mapper文件的位置 ,不配置Mapper接口和Mapper配置的包名必须相同 -->
        <property name="mapperLocations"
            value="classpath:/mapper/*.xml"></property>
    </bean>

    <!-- 扫描所有的mapper接口的实现,让这些mapper能够自动注入 -->
    <!-- base-package:指定mapper接口的包名 -->
    <mybatis-spring:scan base-package="com.gs.student.dao" />

</beans>